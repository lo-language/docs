<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>lo</string>
	</array>
	<key>name</key>
	<string>Lo</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#operators</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(null|true|false)\b</string>
			<key>name</key>
			<string>constant.language.lo</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\[|\]</string>
			<key>name</key>
			<string>meta.brace.square.lo</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\(|\)</string>
			<key>name</key>
			<string>meta.brace.curly.lo</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.c</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.c</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.lo</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_escaped_char</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>inc</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.digit-separator-should-not-be-last.c++</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?x)\b
			(  (?i:
			      0x ( \h+    ( ' \h+    )* )?  # Hexadecimal
			   |  0b ( [0-1]+ ( ' [0-1]+ )* )?  # Binary
			   |  0  ( [0-7]+ ( ' [0-7]+ )* )   # Octal
			   |     ( [0-9]+ ( ' [0-9]+ )* )   # Decimal
			   )
			   ( ([uUfF] | u?ll? | U?LL?)\b | (?&lt;inc&gt;') | \b )
			|  ( [0-9]+ ( ' [0-9]+ )* )?
			   (?i:
			      \. ( [0-9]+ ( ' [0-9]+ )* ) E(\+|-)? ( [0-9]+ ( ' [0-9]+ )* )
			   |  \. ( [0-9]+ ( ' [0-9]+ )* )
			   |  E(\+|-)? ( [0-9]+ ( ' [0-9]+ )* )
			   )
			   ( (?&lt;inc&gt;') | \b )
			)</string>
			<key>name</key>
			<string>constant.numeric.lo</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(if|else|while|reply|fail)\b</string>
			<key>name</key>
			<string>keyword.control.lo</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\-&gt;|&lt;\-&gt;</string>
			<key>name</key>
			<string>keyword.other.procedure-def.lo</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.double.lo</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\.</string>
					<key>name</key>
					<string>constant.character.escape.lo</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.toc-list.banner.block.c</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^/\* =(\s*.*?)\s*= \*/$\n?</string>
					<key>name</key>
					<string>comment.block.lo</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.begin.c</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.end.c</string>
						</dict>
					</dict>
					<key>name</key>
					<string>comment.block.lo</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\*/.*\n</string>
					<key>name</key>
					<string>invalid.illegal.stray-comment-end.lo</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.toc-list.banner.line.c</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^// =(\s*.*?)\s*=\s*$\n?</string>
					<key>name</key>
					<string>comment.line.banner.lo</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(^[ \t]+)?(?=//)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.whitespace.comment.leading.c++</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?!\G)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>//</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.c++</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\n</string>
							<key>name</key>
							<string>comment.line.double-slash.lo</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?&gt;\\\s*\n)</string>
									<key>name</key>
									<string>punctuation.separator.continuation.c++</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>function-params</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=[\p{L}\p{Nl}$_])</string>
					<key>comment</key>
					<string>Matches valid argument, function and variable names.  To be thorough: https://github.com/mathiasbynens/mothereff.in/tree/master/js-variables</string>
					<key>end</key>
					<string>(?=[,)/])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\G[\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}\x{200C}\x{200D}]*</string>
							<key>name</key>
							<string>variable.parameter.function.lo</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
			</array>
		</dict>
		<key>operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>%=|\+=|\-=|\*=|(?&lt;!\()/=</string>
					<key>name</key>
					<string>keyword.operator.assignment.compound.lo</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&gt;&lt;</string>
					<key>name</key>
					<string>keyword.operator.concat.lo</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bis\b</string>
					<key>name</key>
					<string>keyword.operator.define.lo</string>
				</dict>
				<dict>
					<key>match</key>
					<string>!==|!=|&lt;=|&gt;=|===|==|&lt;|&gt;</string>
					<key>name</key>
					<string>keyword.operator.comparison.lo</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(and|not|or)\b</string>
					<key>name</key>
					<string>keyword.operator.logical.lo</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&amp;|\||\^|~</string>
					<key>name</key>
					<string>keyword.operator.bitwise.lo</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&gt;&gt;|@|\bon\b|\bon fail\b</string>
					<key>name</key>
					<string>keyword.operator.lo</string>
				</dict>
				<dict>
					<key>match</key>
					<string>!</string>
					<key>name</key>
					<string>keyword.operator.logical.lo</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=|\:</string>
					<key>name</key>
					<string>keyword.operator.assignment.lo</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\-\-</string>
					<key>name</key>
					<string>keyword.operator.decrement.lo</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\+\+</string>
					<key>name</key>
					<string>keyword.operator.increment.lo</string>
				</dict>
				<dict>
					<key>match</key>
					<string>%|\*|/|\-|\+</string>
					<key>name</key>
					<string>keyword.operator.arithmetic.lo</string>
				</dict>
				<dict>
					<key>match</key>
					<string>#|\bhas\b|\bcontains\b</string>
					<key>name</key>
					<string>keyword.operator.set.lo</string>
				</dict>
			</array>
		</dict>
		<key>string_escaped_char</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\(\\|[abefnprtv'"?]|[0-3]\d{0,2}|[4-7]\d?|x[a-fA-F0-9]{0,2}|u[a-fA-F0-9]{0,4}|U[a-fA-F0-9]{0,8})</string>
					<key>name</key>
					<string>constant.character.escape.c</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>invalid.illegal.unknown-escape.c</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.lo</string>
	<key>uuid</key>
	<string>8B28FABE-36AC-4D6B-9834-AF498F996EA3</string>
</dict>
</plist>
